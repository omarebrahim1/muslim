{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SaWa\\\\Downloads\\\\Programs\\\\omar\\\\my_files\\\\muslim\\\\React Project\\\\src\\\\components\\\\Adhkar\\\\AdhkarBody\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useMemo, useState } from 'react';\nimport { useFetch, isError, isLoading, isSuccess } from '../../../custom-hooks';\nimport { getAdhkar } from '../../../apis';\nimport AdhkarCards from './AdhkarCards';\nimport AdhkarContent from './AdhkarContent';\nimport SpinnerLoading from '../../SpinnerLoading';\nimport ErrorAlert from '../../ErrorAlert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdhkarBody() {\n  _s();\n  const {\n    data,\n    status\n  } = useFetch({\n    url: getAdhkar()\n  }, []);\n  const [chosenAdhkar, setChosenAdhkar] = useState('');\n  const cardsValue = useMemo(() => data ? Object.keys(data) : null, [data]);\n  const adhkarContent = useMemo(() => {\n    var _data$chosenAdhkar;\n    return data ? (_data$chosenAdhkar = data[chosenAdhkar]) === null || _data$chosenAdhkar === void 0 ? void 0 : _data$chosenAdhkar.flat().filter(item => item.content !== \"stop\") : null;\n  }, [data, chosenAdhkar]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [isLoading(status) && /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 35\n    }, this), isError(status) && /*#__PURE__*/_jsxDEV(ErrorAlert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }, this), isSuccess(status) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AdhkarCards, {\n        chosenAdhkar: chosenAdhkar,\n        setChosenAdhkar: setChosenAdhkar,\n        data: cardsValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AdhkarContent, {\n        content: adhkarContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(AdhkarBody, \"yj5ufTvsJUwuX3pskRLcVAJhW8c=\", false, function () {\n  return [useFetch];\n});\n_c = AdhkarBody;\nvar _c;\n$RefreshReg$(_c, \"AdhkarBody\");","map":{"version":3,"names":["useMemo","useState","useFetch","isError","isLoading","isSuccess","getAdhkar","AdhkarCards","AdhkarContent","SpinnerLoading","ErrorAlert","jsxDEV","_jsxDEV","Fragment","_Fragment","AdhkarBody","_s","data","status","url","chosenAdhkar","setChosenAdhkar","cardsValue","Object","keys","adhkarContent","_data$chosenAdhkar","flat","filter","item","content","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SaWa/Downloads/Programs/omar/my_files/muslim/React Project/src/components/Adhkar/AdhkarBody/index.jsx"],"sourcesContent":["import { useMemo, useState } from 'react'\nimport {useFetch, isError, isLoading, isSuccess } from '../../../custom-hooks'\nimport { getAdhkar } from '../../../apis'\nimport AdhkarCards from './AdhkarCards';\nimport AdhkarContent from './AdhkarContent';\nimport SpinnerLoading from '../../SpinnerLoading';\nimport ErrorAlert from '../../ErrorAlert';\n\nexport default function AdhkarBody() {\n    const { data, status } = useFetch({ url: getAdhkar() }, []);\n    const [chosenAdhkar, setChosenAdhkar] = useState('');\n    const cardsValue = useMemo(() => data ? Object.keys(data) : null, [data]);\n    const adhkarContent = useMemo(() => data ? data[chosenAdhkar]?.flat().filter((item) => item.content !== \"stop\") : null, [data, chosenAdhkar]);\n\n    return (\n        <main>\n            {isLoading(status) && <SpinnerLoading />}\n            {isError(status) && <ErrorAlert />}\n            {isSuccess(status) && (\n                <>\n                    <AdhkarCards\n                        chosenAdhkar={chosenAdhkar}\n                        setChosenAdhkar={setChosenAdhkar}\n                        data={cardsValue} />\n\n                    <AdhkarContent content={adhkarContent} />\n                </>\n            )}\n        </main>\n    )\n}\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACzC,SAAQC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,EAAEC,SAAS,QAAQ,uBAAuB;AAC9E,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,GAAG,EAAEb,SAAS,CAAC;EAAE,CAAC,EAAE,EAAE,CAAC;EAC3D,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMqB,UAAU,GAAGtB,OAAO,CAAC,MAAMiB,IAAI,GAAGM,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,GAAG,IAAI,EAAE,CAACA,IAAI,CAAC,CAAC;EACzE,MAAMQ,aAAa,GAAGzB,OAAO,CAAC;IAAA,IAAA0B,kBAAA;IAAA,OAAMT,IAAI,IAAAS,kBAAA,GAAGT,IAAI,CAACG,YAAY,CAAC,cAAAM,kBAAA,uBAAlBA,kBAAA,CAAoBC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAK,MAAM,CAAC,GAAG,IAAI;EAAA,GAAE,CAACb,IAAI,EAAEG,YAAY,CAAC,CAAC;EAE7I,oBACIR,OAAA;IAAAmB,QAAA,GACK3B,SAAS,CAACc,MAAM,CAAC,iBAAIN,OAAA,CAACH,cAAc;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvChC,OAAO,CAACe,MAAM,CAAC,iBAAIN,OAAA,CAACF,UAAU;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjC9B,SAAS,CAACa,MAAM,CAAC,iBACdN,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACInB,OAAA,CAACL,WAAW;QACRa,YAAY,EAAEA,YAAa;QAC3BC,eAAe,EAAEA,eAAgB;QACjCJ,IAAI,EAAEK;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAExBvB,OAAA,CAACJ,aAAa;QAACsB,OAAO,EAAEL;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC3C,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf;AAACnB,EAAA,CAtBuBD,UAAU;EAAA,QACLb,QAAQ;AAAA;AAAAkC,EAAA,GADbrB,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}