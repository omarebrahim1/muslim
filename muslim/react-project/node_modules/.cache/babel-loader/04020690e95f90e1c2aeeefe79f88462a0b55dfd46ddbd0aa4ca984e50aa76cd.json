{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SaWa\\\\Downloads\\\\Programs\\\\omar\\\\my_files\\\\muslim\\\\React Project\\\\src\\\\components\\\\Quran\\\\QuranPlayer\\\\QuranPlayerBody\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { memo, useContext, useEffect, useMemo } from 'react';\nimport { useFetch, isLoading, isSuccess, isError } from '../../../../custom-hooks';\nimport { getPageAyahs } from '../../../../apis';\nimport PageSurahs from './PageSurahs';\nimport PageAyahs from './PageAyahs';\nimport PageControls from './PageControls';\nimport QuranPlayerContext from '../QuranPlayerContext';\nimport { setActiveAyah, setEndAyahPage, setCurrentSurahNumber } from '../../../../reducers/QuranPlayerActions';\nimport { Box, Container } from '@mui/material';\nimport SpinnerLoading from '../../../SpinnerLoading';\nimport ErrorAlert from '../../../ErrorAlert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuranPlayerBody({\n  containerMaxWidth\n}) {\n  _s();\n  const [quranPlayerState, dispatchQuranPlayerState] = useContext(QuranPlayerContext);\n  const pageURL = useMemo(() => getPageAyahs(quranPlayerState.currentPage), [quranPlayerState.currentPage]);\n  const {\n    data,\n    status\n  } = useFetch({\n    url: pageURL\n  }, [pageURL]);\n  useEffect(() => {\n    if (!data) return;\n    const firstAyahPageNumber = data.data.ayahs[0].number;\n    const lastAyahPageNumber = data.data.ayahs[data.data.ayahs.length - 1].number;\n    const firstSurahNumber = data.data.ayahs[0].surah.number;\n\n    // This will make sure that the current marked surah option is the chosen one not the first one in the page as the page can contains more than one surah\n    const isCurrentSurahNumberModified = Object.keys(data.data.surahs).find(surahNumber => {\n      return parseInt(surahNumber) === quranPlayerState.currentSurahNumber;\n    });\n    if (!isCurrentSurahNumberModified) {\n      dispatchQuranPlayerState(setCurrentSurahNumber(firstSurahNumber));\n    }\n    if (quranPlayerState.isAudioPlaying) {\n      dispatchQuranPlayerState(setActiveAyah(firstAyahPageNumber));\n    } else {\n      dispatchQuranPlayerState(setActiveAyah(null));\n    }\n    dispatchQuranPlayerState(setEndAyahPage(lastAyahPageNumber));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"main\",\n    children: [isLoading(status) && /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: containerMaxWidth,\n      children: /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), isError(status) && /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: containerMaxWidth,\n      children: /*#__PURE__*/_jsxDEV(ErrorAlert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), isSuccess(status) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PageSurahs, {\n        containerMaxWidth: containerMaxWidth,\n        surahs: data.data.surahs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PageAyahs, {\n        containerMaxWidth: containerMaxWidth,\n        ayahs: data.data.ayahs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PageControls, {\n        containerMaxWidth: containerMaxWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(QuranPlayerBody, \"XJe71N/Va5Ja1QaglZXE5r4Y1HI=\", false, function () {\n  return [useFetch];\n});\n_c = QuranPlayerBody;\nexport default _c2 = /*#__PURE__*/memo(QuranPlayerBody);\nvar _c, _c2;\n$RefreshReg$(_c, \"QuranPlayerBody\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useContext","useEffect","useMemo","useFetch","isLoading","isSuccess","isError","getPageAyahs","PageSurahs","PageAyahs","PageControls","QuranPlayerContext","setActiveAyah","setEndAyahPage","setCurrentSurahNumber","Box","Container","SpinnerLoading","ErrorAlert","jsxDEV","_jsxDEV","Fragment","_Fragment","QuranPlayerBody","containerMaxWidth","_s","quranPlayerState","dispatchQuranPlayerState","pageURL","currentPage","data","status","url","firstAyahPageNumber","ayahs","number","lastAyahPageNumber","length","firstSurahNumber","surah","isCurrentSurahNumberModified","Object","keys","surahs","find","surahNumber","parseInt","currentSurahNumber","isAudioPlaying","component","children","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/Users/SaWa/Downloads/Programs/omar/my_files/muslim/React Project/src/components/Quran/QuranPlayer/QuranPlayerBody/index.jsx"],"sourcesContent":["import { memo, useContext, useEffect, useMemo } from 'react'\nimport {useFetch, isLoading, isSuccess, isError } from '../../../../custom-hooks';\nimport { getPageAyahs } from '../../../../apis';\nimport PageSurahs from './PageSurahs';\nimport PageAyahs from './PageAyahs';\nimport PageControls from './PageControls';\nimport QuranPlayerContext from '../QuranPlayerContext';\nimport { setActiveAyah, setEndAyahPage, setCurrentSurahNumber } from '../../../../reducers/QuranPlayerActions';\nimport { Box, Container } from '@mui/material';\nimport SpinnerLoading from '../../../SpinnerLoading';\nimport ErrorAlert from '../../../ErrorAlert';\n\nfunction QuranPlayerBody({ containerMaxWidth }) {\n    const [quranPlayerState, dispatchQuranPlayerState] = useContext(QuranPlayerContext);\n    const pageURL = useMemo(() => getPageAyahs(quranPlayerState.currentPage), [quranPlayerState.currentPage]);\n    const { data, status } = useFetch({ url: pageURL }, [pageURL]);\n\n    useEffect(() => {\n        if (!data) return;\n        const firstAyahPageNumber = data.data.ayahs[0].number;\n        const lastAyahPageNumber = data.data.ayahs[data.data.ayahs.length - 1].number;\n        const firstSurahNumber = data.data.ayahs[0].surah.number;\n        \n        // This will make sure that the current marked surah option is the chosen one not the first one in the page as the page can contains more than one surah\n        const isCurrentSurahNumberModified = Object.keys(data.data.surahs).find((surahNumber) => {\n            return parseInt(surahNumber) === quranPlayerState.currentSurahNumber;\n        });\n        if (!isCurrentSurahNumberModified) {\n            dispatchQuranPlayerState(setCurrentSurahNumber(firstSurahNumber));\n        }\n\n        if (quranPlayerState.isAudioPlaying) {\n            dispatchQuranPlayerState(setActiveAyah(firstAyahPageNumber));\n        } else {\n            dispatchQuranPlayerState(setActiveAyah(null));\n        }\n        dispatchQuranPlayerState(setEndAyahPage(lastAyahPageNumber));\n    }, [data]);\n\n    return (\n        <Box component='main'>\n            {isLoading(status) && (\n                <Container maxWidth={containerMaxWidth}>\n                    <SpinnerLoading />\n                </Container>\n            )}\n            {isError(status) && (\n                <Container maxWidth={containerMaxWidth}>\n                    <ErrorAlert />\n                </Container>\n            )}\n            {isSuccess(status) && (\n                <>\n                    <PageSurahs containerMaxWidth={containerMaxWidth} surahs={data.data.surahs} />\n                    <PageAyahs containerMaxWidth={containerMaxWidth} ayahs={data.data.ayahs} />\n                    <PageControls containerMaxWidth={containerMaxWidth} />\n                </>\n            )}\n        </Box>\n    )\n}\n\nexport default memo(QuranPlayerBody);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}