{"ast":null,"code":"const arabicPrayerTimes = {\n  fajr: \"الفجر\",\n  dhuhr: \"الظهر\",\n  asr: \"العصر\",\n  maghrib: \"المغرب\",\n  isha: \"العشاء\"\n};\nconst parsePrayerTimes = timings => {\n  return {\n    [arabicPrayerTimes.fajr]: timings.Fajr,\n    [arabicPrayerTimes.dhuhr]: timings.Dhuhr,\n    [arabicPrayerTimes.asr]: timings.Asr,\n    [arabicPrayerTimes.maghrib]: timings.Maghrib,\n    [arabicPrayerTimes.isha]: timings.Isha\n  };\n};\nconst parseHijriDate = date => {\n  return {\n    dateInNumbers: date.date,\n    day: date.weekday.ar,\n    month: date.month.ar,\n    year: date.year\n  };\n};\nconst parseGregorianDate = date => {\n  return {\n    dateInNumbers: date.date\n  };\n};\nconst currentDate = {\n  day: new Date().getDate(),\n  month: new Date().getMonth() + 1,\n  year: new Date().getFullYear()\n};\nexport { parsePrayerTimes, parseHijriDate, parseGregorianDate, currentDate };","map":{"version":3,"names":["arabicPrayerTimes","fajr","dhuhr","asr","maghrib","isha","parsePrayerTimes","timings","Fajr","Dhuhr","Asr","Maghrib","Isha","parseHijriDate","date","dateInNumbers","day","weekday","ar","month","year","parseGregorianDate","currentDate","Date","getDate","getMonth","getFullYear"],"sources":["C:/Users/SaWa/Downloads/Programs/omar/my_files/muslim/React Project/src/components/Hijri-Calendar/util/HijriCalendarHeaderSection.js"],"sourcesContent":["const arabicPrayerTimes = {\n    fajr: \"الفجر\",\n    dhuhr: \"الظهر\",\n    asr: \"العصر\",\n    maghrib: \"المغرب\",\n    isha: \"العشاء\",\n}\n\nconst parsePrayerTimes = (timings) => {\n    return {\n        [arabicPrayerTimes.fajr]: timings.Fajr,\n        [arabicPrayerTimes.dhuhr]: timings.Dhuhr,\n        [arabicPrayerTimes.asr]: timings.Asr,\n        [arabicPrayerTimes.maghrib]: timings.Maghrib,\n        [arabicPrayerTimes.isha]: timings.Isha\n    }\n}\n\nconst parseHijriDate = (date) => {\n    return {\n        dateInNumbers: date.date,\n        day: date.weekday.ar,\n        month: date.month.ar,\n        year: date.year,\n    }\n}\n\nconst parseGregorianDate = (date) => {\n    return {\n        dateInNumbers: date.date,\n    }\n}\n\nconst currentDate = {\n    day: new Date().getDate(),\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear(),\n}\n\nexport { parsePrayerTimes, parseHijriDate, parseGregorianDate, currentDate };"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG;EACtBC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,OAAO;EACZC,OAAO,EAAE,QAAQ;EACjBC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;EAClC,OAAO;IACH,CAACP,iBAAiB,CAACC,IAAI,GAAGM,OAAO,CAACC,IAAI;IACtC,CAACR,iBAAiB,CAACE,KAAK,GAAGK,OAAO,CAACE,KAAK;IACxC,CAACT,iBAAiB,CAACG,GAAG,GAAGI,OAAO,CAACG,GAAG;IACpC,CAACV,iBAAiB,CAACI,OAAO,GAAGG,OAAO,CAACI,OAAO;IAC5C,CAACX,iBAAiB,CAACK,IAAI,GAAGE,OAAO,CAACK;EACtC,CAAC;AACL,CAAC;AAED,MAAMC,cAAc,GAAIC,IAAI,IAAK;EAC7B,OAAO;IACHC,aAAa,EAAED,IAAI,CAACA,IAAI;IACxBE,GAAG,EAAEF,IAAI,CAACG,OAAO,CAACC,EAAE;IACpBC,KAAK,EAAEL,IAAI,CAACK,KAAK,CAACD,EAAE;IACpBE,IAAI,EAAEN,IAAI,CAACM;EACf,CAAC;AACL,CAAC;AAED,MAAMC,kBAAkB,GAAIP,IAAI,IAAK;EACjC,OAAO;IACHC,aAAa,EAAED,IAAI,CAACA;EACxB,CAAC;AACL,CAAC;AAED,MAAMQ,WAAW,GAAG;EAChBN,GAAG,EAAE,IAAIO,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EACzBL,KAAK,EAAE,IAAII,IAAI,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC;EAChCL,IAAI,EAAE,IAAIG,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC;AACjC,CAAC;AAED,SAASpB,gBAAgB,EAAEO,cAAc,EAAEQ,kBAAkB,EAAEC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}