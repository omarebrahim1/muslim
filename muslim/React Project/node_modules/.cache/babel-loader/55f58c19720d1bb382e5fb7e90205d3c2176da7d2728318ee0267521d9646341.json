{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = ({\n  url\n}, dependencies) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState(\"loading\"); // loading, error, success\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!url) {\n      setStatus(\"error\");\n      return;\n    }\n    setStatus(\"loading\");\n    async function getData() {\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const data = await response.json();\n        setData(data);\n        setStatus(\"success\");\n      } catch (error) {\n        setStatus(\"error\");\n        setError(error.message);\n      }\n    }\n    getData();\n  }, dependencies);\n  return {\n    data,\n    status,\n    error\n  };\n};\n_s(useFetch, \"Wk3JtJWI3iXeXzFzXqBXWdhim28=\");\nconst isLoading = status => status === \"loading\";\nconst isSuccess = status => status === \"success\";\nconst isError = status => status === \"error\";\nexport { useFetch, isLoading, isSuccess, isError };","map":{"version":3,"names":["useEffect","useState","useFetch","url","dependencies","_s","data","setData","status","setStatus","error","setError","getData","response","fetch","ok","Error","json","message","isLoading","isSuccess","isError"],"sources":["C:/Users/SaWa/Downloads/Programs/omar/my_files/muslim/React Project/src/custom-hooks/fetchData.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = ({ url }, dependencies) => {\n    const [data, setData] = useState(null);\n    const [status, setStatus] = useState(\"loading\"); // loading, error, success\n    const [error, setError] = useState(null);\n    \n    useEffect(() => {\n        if (!url) {\n            setStatus(\"error\");\n            return;\n        }\n        setStatus(\"loading\");\n        async function getData() {\n            try {\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(\"Something went wrong\");\n                }\n                const data = await response.json();\n                setData(data);\n                setStatus(\"success\");\n            } catch (error) {\n                setStatus(\"error\");\n                setError(error.message);\n            }\n        }\n        getData();\n    }, dependencies);\n\n    return { data, status, error };\n}\n\nconst isLoading = (status) => status === \"loading\";\nconst isSuccess = (status) => status === \"success\";\nconst isError = (status) => status === \"error\";\n\nexport { useFetch, isLoading, isSuccess, isError };"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAI,CAAC,EAAEC,YAAY,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACG,GAAG,EAAE;MACNM,SAAS,CAAC,OAAO,CAAC;MAClB;IACJ;IACAA,SAAS,CAAC,SAAS,CAAC;IACpB,eAAeG,OAAOA,CAAA,EAAG;MACrB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAG,CAAC;QACjC,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAC3C;QACA,MAAMV,IAAI,GAAG,MAAMO,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCV,OAAO,CAACD,IAAI,CAAC;QACbG,SAAS,CAAC,SAAS,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZD,SAAS,CAAC,OAAO,CAAC;QAClBE,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC;MAC3B;IACJ;IACAN,OAAO,CAAC,CAAC;EACb,CAAC,EAAER,YAAY,CAAC;EAEhB,OAAO;IAAEE,IAAI;IAAEE,MAAM;IAAEE;EAAM,CAAC;AAClC,CAAC;AAAAL,EAAA,CA7BKH,QAAQ;AA+Bd,MAAMiB,SAAS,GAAIX,MAAM,IAAKA,MAAM,KAAK,SAAS;AAClD,MAAMY,SAAS,GAAIZ,MAAM,IAAKA,MAAM,KAAK,SAAS;AAClD,MAAMa,OAAO,GAAIb,MAAM,IAAKA,MAAM,KAAK,OAAO;AAE9C,SAASN,QAAQ,EAAEiB,SAAS,EAAEC,SAAS,EAAEC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}