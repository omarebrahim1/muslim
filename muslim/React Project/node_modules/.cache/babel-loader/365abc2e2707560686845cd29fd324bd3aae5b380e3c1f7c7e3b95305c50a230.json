{"ast":null,"code":"import { currentDate } from \"./HijriCalendarHeaderSection\";\nfunction parseDateParam(date) {\n  if (!date.match(/^\\d{2}-\\d{2}-\\d{4}$/)) {\n    return currentDate;\n  } else {\n    const day = date.split('-')[0];\n    const month = date.split('-')[1];\n    const year = date.split('-')[2];\n    if (day < 1 || day > 30 || month < 1 || month > 12 || year < 1) {\n      return currentDate;\n    }\n    return {\n      day: parseInt(day),\n      month: parseInt(month),\n      year: parseInt(year)\n    };\n  }\n}\nexport { parseDateParam };","map":{"version":3,"names":["currentDate","parseDateParam","date","match","day","split","month","year","parseInt"],"sources":["C:/Users/SaWa/Downloads/Programs/omar/my_files/muslim/React Project/src/components/Hijri-Calendar/util/HijriCalendarByDate.js"],"sourcesContent":["import { currentDate } from \"./HijriCalendarHeaderSection\";\n\nfunction parseDateParam(date) {\n    if (!date.match(/^\\d{2}-\\d{2}-\\d{4}$/)) {\n        return currentDate;\n    } else {\n        const day = date.split('-')[0];\n        const month = date.split('-')[1];\n        const year = date.split('-')[2];\n        if (day < 1 || day > 30 || month < 1 || month > 12 || year < 1) {\n            return currentDate;\n        }\n        return ({\n            day: parseInt(day),\n            month: parseInt(month),\n            year: parseInt(year)\n        });\n    }\n}\n\nexport { parseDateParam }"],"mappings":"AAAA,SAASA,WAAW,QAAQ,8BAA8B;AAE1D,SAASC,cAAcA,CAACC,IAAI,EAAE;EAC1B,IAAI,CAACA,IAAI,CAACC,KAAK,CAAC,qBAAqB,CAAC,EAAE;IACpC,OAAOH,WAAW;EACtB,CAAC,MAAM;IACH,MAAMI,GAAG,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAMC,KAAK,GAAGJ,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,MAAME,IAAI,GAAGL,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B,IAAID,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAG,EAAE,IAAIE,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,EAAE,IAAIC,IAAI,GAAG,CAAC,EAAE;MAC5D,OAAOP,WAAW;IACtB;IACA,OAAQ;MACJI,GAAG,EAAEI,QAAQ,CAACJ,GAAG,CAAC;MAClBE,KAAK,EAAEE,QAAQ,CAACF,KAAK,CAAC;MACtBC,IAAI,EAAEC,QAAQ,CAACD,IAAI;IACvB,CAAC;EACL;AACJ;AAEA,SAASN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}