{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SaWa\\\\Downloads\\\\Programs\\\\omar\\\\my_files\\\\muslim\\\\React Project\\\\src\\\\components\\\\Hijri-Calendar\\\\HijriCalendarHeaderSection\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Container } from '@mui/material';\nimport FullDate from './FullDate';\nimport PrayerTimesTable from './PrayerTimesTable';\nimport { useFetch, isError, isLoading, isSuccess } from '../../../custom-hooks';\nimport { useEffect, useMemo, useState } from 'react';\nimport { getDatesAndTimes } from '../../../apis';\nimport SpinnerLoading from '../../SpinnerLoading';\nimport ErrorAlert from '../../ErrorAlert';\nimport { parsePrayerTimes, parseGregorianDate, parseHijriDate, currentDate } from '../util';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HijriCalendarHeaderSection({\n  pageDate = currentDate\n}) {\n  _s();\n  const [datesAndTimesURL, setDatesAndTimesURL] = useState(null);\n  const {\n    data,\n    status\n  } = useFetch({\n    url: datesAndTimesURL\n  }, [datesAndTimesURL]);\n  const hijriDate = useMemo(() => {\n    if (!data) return null;\n    return parseHijriDate(data.data.date.hijri);\n  }, [data]);\n  const gregorianDate = useMemo(() => {\n    if (!data) return null;\n    return parseGregorianDate(data.data.date.gregorian);\n  }, [data]);\n  const prayerTimes = useMemo(() => {\n    if (!data) return null;\n    return parsePrayerTimes(data.data.timings);\n  }, [data]);\n  useEffect(() => {\n    getDatesAndTimes(pageDate).then(res => {\n      setDatesAndTimesURL(res);\n    });\n  }, [pageDate]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"header\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 4\n      },\n      children: [isLoading(status) && /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 39\n      }, this), isError(status) && datesAndTimesURL && /*#__PURE__*/_jsxDEV(ErrorAlert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 57\n      }, this), isSuccess(status) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FullDate, {\n          hijriDate: hijriDate,\n          gregorianDate: gregorianDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PrayerTimesTable, {\n          timezone: data.data.meta.timezone,\n          prayerTimes: prayerTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(HijriCalendarHeaderSection, \"yJjXSocdXOrdGUwgXgUjJ3JW7eY=\", false, function () {\n  return [useFetch];\n});\n_c = HijriCalendarHeaderSection;\nvar _c;\n$RefreshReg$(_c, \"HijriCalendarHeaderSection\");","map":{"version":3,"names":["Box","Container","FullDate","PrayerTimesTable","useFetch","isError","isLoading","isSuccess","useEffect","useMemo","useState","getDatesAndTimes","SpinnerLoading","ErrorAlert","parsePrayerTimes","parseGregorianDate","parseHijriDate","currentDate","jsxDEV","_jsxDEV","Fragment","_Fragment","HijriCalendarHeaderSection","pageDate","_s","datesAndTimesURL","setDatesAndTimesURL","data","status","url","hijriDate","date","hijri","gregorianDate","gregorian","prayerTimes","timings","then","res","component","children","maxWidth","sx","py","fileName","_jsxFileName","lineNumber","columnNumber","timezone","meta","_c","$RefreshReg$"],"sources":["C:/Users/SaWa/Downloads/Programs/omar/my_files/muslim/React Project/src/components/Hijri-Calendar/HijriCalendarHeaderSection/index.jsx"],"sourcesContent":["import { Box, Container } from '@mui/material';\nimport FullDate from './FullDate';\nimport PrayerTimesTable from './PrayerTimesTable';\nimport { useFetch, isError, isLoading, isSuccess } from '../../../custom-hooks';\nimport { useEffect, useMemo, useState } from 'react';\nimport { getDatesAndTimes } from '../../../apis';\nimport SpinnerLoading from '../../SpinnerLoading';\nimport ErrorAlert from '../../ErrorAlert';\nimport {\n    parsePrayerTimes,\n    parseGregorianDate,\n    parseHijriDate,\n    currentDate\n} from '../util';\n\nexport default function HijriCalendarHeaderSection({ pageDate = currentDate }) {\n    const [datesAndTimesURL, setDatesAndTimesURL] = useState(null);\n    const { data, status } = useFetch({ url: datesAndTimesURL }, [datesAndTimesURL]);\n\n    const hijriDate = useMemo(() => {\n        if (!data) return null;\n        return parseHijriDate(data.data.date.hijri);\n    }, [data]);\n\n    const gregorianDate = useMemo(() => {\n        if (!data) return null;\n        return parseGregorianDate(data.data.date.gregorian);\n    }, [data]);\n\n    const prayerTimes = useMemo(() => {\n        if (!data) return null;\n        return parsePrayerTimes(data.data.timings)\n    }, [data]);\n\n    useEffect(() => {\n        getDatesAndTimes(pageDate).then((res) => {\n            setDatesAndTimesURL(res);\n        });\n    }, [pageDate]);\n\n    return (\n        <Box component=\"header\">\n            <Container maxWidth=\"lg\" sx={{\n                py: 4,\n            }}>\n                {isLoading(status) && <SpinnerLoading />}\n                {isError(status) && datesAndTimesURL && <ErrorAlert />}\n                {isSuccess(status) && (\n                    <>\n                        <FullDate\n                            hijriDate={hijriDate}\n                            gregorianDate={gregorianDate} />\n                        <PrayerTimesTable\n                            timezone={data.data.meta.timezone}\n                            prayerTimes={prayerTimes} />\n                    </>\n                )}\n            </Container>\n        </Box>\n    )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}